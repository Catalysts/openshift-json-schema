{
  "description": "PersistentVolumeList is a list of PersistentVolume items.",
  "required": [
    "items"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ]
    },
    "items": {
      "description": "List of persistent volumes. More info: http://kubernetes.io/docs/user-guide/persistent-volumes",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "description": "PersistentVolume (PV) is a storage resource provisioned by an administrator. It is analogous to a node. More info: http://kubernetes.io/docs/user-guide/persistent-volumes",
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources",
            "type": [
              "string",
              "null"
            ]
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
            "type": [
              "string",
              "null"
            ]
          },
          "metadata": {
            "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
            "properties": {
              "annotations": {
                "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
                "type": "object",
                "additionalProperties": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "clusterName": {
                "description": "The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "creationTimestamp": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "deletionGracePeriodSeconds": {
                "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
                "type": "integer",
                "format": "int64"
              },
              "deletionTimestamp": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "finalizers": {
                "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "generateName": {
                "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#idempotency",
                "type": [
                  "string",
                  "null"
                ]
              },
              "generation": {
                "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
                "type": "integer",
                "format": "int64"
              },
              "labels": {
                "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                "type": "object",
                "additionalProperties": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "name": {
                "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                "type": [
                  "string",
                  "null"
                ]
              },
              "namespace": {
                "description": "Namespace defines the space within each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
                "type": [
                  "string",
                  "null"
                ]
              },
              "ownerReferences": {
                "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "description": "OwnerReference contains enough information to let you identify an owning object. Currently, an owning object must be in the same namespace, so there is no namespace field.",
                  "required": [
                    "apiVersion",
                    "kind",
                    "name",
                    "uid"
                  ],
                  "properties": {
                    "apiVersion": {
                      "description": "API version of the referent.",
                      "type": "string"
                    },
                    "blockOwnerDeletion": {
                      "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
                      "type": "boolean"
                    },
                    "controller": {
                      "description": "If true, this reference points to the managing controller.",
                      "type": "boolean"
                    },
                    "kind": {
                      "description": "Kind of the referent. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "type": "string"
                    },
                    "uid": {
                      "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "type": "string"
                    }
                  }
                }
              },
              "resourceVersion": {
                "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#concurrency-control-and-consistency",
                "type": [
                  "string",
                  "null"
                ]
              },
              "selfLink": {
                "description": "SelfLink is a URL representing this object. Populated by the system. Read-only.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "uid": {
                "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          "spec": {
            "description": "PersistentVolumeSpec is the specification of a persistent volume.",
            "properties": {
              "accessModes": {
                "description": "AccessModes contains all ways the volume can be mounted. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#access-modes",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "awsElasticBlockStore": {
                "description": "Represents a Persistent Disk resource in AWS.\n\nAn AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.",
                "required": [
                  "volumeID"
                ],
                "properties": {
                  "fsType": {
                    "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "partition": {
                    "description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).",
                    "type": "integer",
                    "format": "int32"
                  },
                  "readOnly": {
                    "description": "Specify \"true\" to force and set the ReadOnly property in VolumeMounts to \"true\". If omitted, the default is \"false\". More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore",
                    "type": "boolean"
                  },
                  "volumeID": {
                    "description": "Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore",
                    "type": "string"
                  }
                }
              },
              "azureDisk": {
                "description": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.",
                "required": [
                  "diskName",
                  "diskURI"
                ],
                "properties": {
                  "cachingMode": {
                    "description": "Host Caching mode: None, Read Only, Read Write.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "diskName": {
                    "description": "The Name of the data disk in the blob storage",
                    "type": "string"
                  },
                  "diskURI": {
                    "description": "The URI the data disk in the blob storage",
                    "type": "string"
                  },
                  "fsType": {
                    "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "readOnly": {
                    "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                    "type": "boolean"
                  }
                }
              },
              "azureFile": {
                "description": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod.",
                "required": [
                  "secretName",
                  "shareName"
                ],
                "properties": {
                  "readOnly": {
                    "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                    "type": "boolean"
                  },
                  "secretName": {
                    "description": "the name of secret that contains Azure Storage Account Name and Key",
                    "type": "string"
                  },
                  "shareName": {
                    "description": "Share Name",
                    "type": "string"
                  }
                }
              },
              "capacity": {
                "description": "A description of the persistent volume's resources and capacity. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#capacity",
                "type": "object",
                "additionalProperties": {
                  "oneOf": [
                    {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    {
                      "type": "integer"
                    }
                  ]
                }
              },
              "cephfs": {
                "description": "Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.",
                "required": [
                  "monitors"
                ],
                "properties": {
                  "monitors": {
                    "description": "Required: Monitors is a collection of Ceph monitors More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                    "type": "array",
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "path": {
                    "description": "Optional: Used as the mounted root, rather than the full Ceph tree, default is /",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "readOnly": {
                    "description": "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                    "type": "boolean"
                  },
                  "secretFile": {
                    "description": "Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "secretRef": {
                    "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
                    "properties": {
                      "name": {
                        "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  },
                  "user": {
                    "description": "Optional: User is the rados user name, default is admin More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              },
              "cinder": {
                "description": "Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.",
                "required": [
                  "volumeID"
                ],
                "properties": {
                  "fsType": {
                    "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "readOnly": {
                    "description": "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                    "type": "boolean"
                  },
                  "volumeID": {
                    "description": "volume id used to identify the volume in cinder More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
                    "type": "string"
                  }
                }
              },
              "claimRef": {
                "description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
                "properties": {
                  "apiVersion": {
                    "description": "API version of the referent.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "fieldPath": {
                    "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "kind": {
                    "description": "Kind of the referent. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "name": {
                    "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "namespace": {
                    "description": "Namespace of the referent. More info: http://kubernetes.io/docs/user-guide/namespaces",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "resourceVersion": {
                    "description": "Specific resourceVersion to which this reference is made, if any. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#concurrency-control-and-consistency",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "uid": {
                    "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              },
              "fc": {
                "description": "Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.",
                "required": [
                  "targetWWNs",
                  "lun"
                ],
                "properties": {
                  "fsType": {
                    "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "lun": {
                    "description": "Required: FC target lun number",
                    "type": "integer",
                    "format": "int32"
                  },
                  "readOnly": {
                    "description": "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                    "type": "boolean"
                  },
                  "targetWWNs": {
                    "description": "Required: FC target worldwide names (WWNs)",
                    "type": "array",
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                }
              },
              "flexVolume": {
                "description": "FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin. This is an alpha feature and may change in future.",
                "required": [
                  "driver"
                ],
                "properties": {
                  "driver": {
                    "description": "Driver is the name of the driver to use for this volume.",
                    "type": "string"
                  },
                  "fsType": {
                    "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "options": {
                    "description": "Optional: Extra command options if any.",
                    "type": "object",
                    "additionalProperties": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "readOnly": {
                    "description": "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                    "type": "boolean"
                  },
                  "secretRef": {
                    "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
                    "properties": {
                      "name": {
                        "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                }
              },
              "flocker": {
                "description": "Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.",
                "properties": {
                  "datasetName": {
                    "description": "Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "datasetUUID": {
                    "description": "UUID of the dataset. This is unique identifier of a Flocker dataset",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              },
              "gcePersistentDisk": {
                "description": "Represents a Persistent Disk resource in Google Compute Engine.\n\nA GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.",
                "required": [
                  "pdName"
                ],
                "properties": {
                  "fsType": {
                    "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "partition": {
                    "description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pdName": {
                    "description": "Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                    "type": "string"
                  },
                  "readOnly": {
                    "description": "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
                    "type": "boolean"
                  }
                }
              },
              "glusterfs": {
                "description": "Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.",
                "required": [
                  "endpoints",
                  "path"
                ],
                "properties": {
                  "endpoints": {
                    "description": "EndpointsName is the endpoint name that details Glusterfs topology. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
                    "type": "string"
                  },
                  "path": {
                    "description": "Path is the Glusterfs volume path. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
                    "type": "string"
                  },
                  "readOnly": {
                    "description": "ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod",
                    "type": "boolean"
                  }
                }
              },
              "hostPath": {
                "description": "Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.",
                "required": [
                  "path"
                ],
                "properties": {
                  "path": {
                    "description": "Path of the directory on the host. More info: http://kubernetes.io/docs/user-guide/volumes#hostpath",
                    "type": "string"
                  }
                }
              },
              "iscsi": {
                "description": "Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.",
                "required": [
                  "targetPortal",
                  "iqn",
                  "lun"
                ],
                "properties": {
                  "chapAuthDiscovery": {
                    "description": "whether support iSCSI Discovery CHAP authentication",
                    "type": "boolean"
                  },
                  "chapAuthSession": {
                    "description": "whether support iSCSI Session CHAP authentication",
                    "type": "boolean"
                  },
                  "fsType": {
                    "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#iscsi",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "iqn": {
                    "description": "Target iSCSI Qualified Name.",
                    "type": "string"
                  },
                  "iscsiInterface": {
                    "description": "Optional: Defaults to 'default' (tcp). iSCSI interface name that uses an iSCSI transport.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "lun": {
                    "description": "iSCSI target lun number.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "portals": {
                    "description": "iSCSI target portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "readOnly": {
                    "description": "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.",
                    "type": "boolean"
                  },
                  "secretRef": {
                    "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
                    "properties": {
                      "name": {
                        "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  },
                  "targetPortal": {
                    "description": "iSCSI target portal. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
                    "type": "string"
                  }
                }
              },
              "nfs": {
                "description": "Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.",
                "required": [
                  "server",
                  "path"
                ],
                "properties": {
                  "path": {
                    "description": "Path that is exported by the NFS server. More info: http://kubernetes.io/docs/user-guide/volumes#nfs",
                    "type": "string"
                  },
                  "readOnly": {
                    "description": "ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: http://kubernetes.io/docs/user-guide/volumes#nfs",
                    "type": "boolean"
                  },
                  "server": {
                    "description": "Server is the hostname or IP address of the NFS server. More info: http://kubernetes.io/docs/user-guide/volumes#nfs",
                    "type": "string"
                  }
                }
              },
              "persistentVolumeReclaimPolicy": {
                "description": "What happens to a persistent volume when released from its claim. Valid options are Retain (default) and Recycle. Recycling must be supported by the volume plugin underlying this persistent volume. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#recycling-policy",
                "type": [
                  "string",
                  "null"
                ]
              },
              "photonPersistentDisk": {
                "description": "Represents a Photon Controller persistent disk resource.",
                "required": [
                  "pdID"
                ],
                "properties": {
                  "fsType": {
                    "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "pdID": {
                    "description": "ID that identifies Photon Controller persistent disk",
                    "type": "string"
                  }
                }
              },
              "portworxVolume": {
                "description": "PortworxVolumeSource represents a Portworx volume resource.",
                "required": [
                  "volumeID"
                ],
                "properties": {
                  "fsType": {
                    "description": "FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "readOnly": {
                    "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                    "type": "boolean"
                  },
                  "volumeID": {
                    "description": "VolumeID uniquely identifies a Portworx volume",
                    "type": "string"
                  }
                }
              },
              "quobyte": {
                "description": "Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling.",
                "required": [
                  "registry",
                  "volume"
                ],
                "properties": {
                  "group": {
                    "description": "Group to map volume access to Default is no group",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "readOnly": {
                    "description": "ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.",
                    "type": "boolean"
                  },
                  "registry": {
                    "description": "Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes",
                    "type": "string"
                  },
                  "user": {
                    "description": "User to map volume access to Defaults to serivceaccount user",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "volume": {
                    "description": "Volume is a string that references an already created Quobyte volume by name.",
                    "type": "string"
                  }
                }
              },
              "rbd": {
                "description": "Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.",
                "required": [
                  "monitors",
                  "image"
                ],
                "properties": {
                  "fsType": {
                    "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#rbd",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "image": {
                    "description": "The rados image name. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                    "type": "string"
                  },
                  "keyring": {
                    "description": "Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "monitors": {
                    "description": "A collection of Ceph monitors. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                    "type": "array",
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "pool": {
                    "description": "The rados pool name. Default is rbd. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "readOnly": {
                    "description": "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                    "type": "boolean"
                  },
                  "secretRef": {
                    "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
                    "properties": {
                      "name": {
                        "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  },
                  "user": {
                    "description": "The rados user name. Default is admin. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              },
              "scaleIO": {
                "description": "ScaleIOVolumeSource represents a persistent ScaleIO volume",
                "required": [
                  "gateway",
                  "system",
                  "secretRef"
                ],
                "properties": {
                  "fsType": {
                    "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "gateway": {
                    "description": "The host address of the ScaleIO API Gateway.",
                    "type": "string"
                  },
                  "protectionDomain": {
                    "description": "The name of the Protection Domain for the configured storage (defaults to \"default\").",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "readOnly": {
                    "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
                    "type": "boolean"
                  },
                  "secretRef": {
                    "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
                    "properties": {
                      "name": {
                        "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  },
                  "sslEnabled": {
                    "description": "Flag to enable/disable SSL communication with Gateway, default false",
                    "type": "boolean"
                  },
                  "storageMode": {
                    "description": "Indicates whether the storage for a volume should be thick or thin (defaults to \"thin\").",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "storagePool": {
                    "description": "The Storage Pool associated with the protection domain (defaults to \"default\").",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "system": {
                    "description": "The name of the storage system as configured in ScaleIO.",
                    "type": "string"
                  },
                  "volumeName": {
                    "description": "The name of a volume already created in the ScaleIO system that is associated with this volume source.",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              },
              "storageClassName": {
                "description": "Name of StorageClass to which this persistent volume belongs. Empty value means that this volume does not belong to any StorageClass.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "vsphereVolume": {
                "description": "Represents a vSphere volume resource.",
                "required": [
                  "volumePath"
                ],
                "properties": {
                  "fsType": {
                    "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "volumePath": {
                    "description": "Path that identifies vSphere volume vmdk",
                    "type": "string"
                  }
                }
              }
            }
          },
          "status": {
            "description": "PersistentVolumeStatus is the current status of a persistent volume.",
            "properties": {
              "message": {
                "description": "A human-readable message indicating details about why the volume is in this state.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "phase": {
                "description": "Phase indicates if a volume is available, bound to a claim, or released by a claim. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#phase",
                "type": [
                  "string",
                  "null"
                ]
              },
              "reason": {
                "description": "Reason is a brief CamelCase string that describes any failure and is meant for machine parsing and tidy display in the CLI.",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        },
        "x-kubernetes-group-version-kind": [
          {
            "Group": "",
            "Version": "v1",
            "Kind": "PersistentVolume"
          }
        ]
      }
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ]
    },
    "metadata": {
      "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
      "properties": {
        "resourceVersion": {
          "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#concurrency-control-and-consistency",
          "type": [
            "string",
            "null"
          ]
        },
        "selfLink": {
          "description": "SelfLink is a URL representing this object. Populated by the system. Read-only.",
          "type": [
            "string",
            "null"
          ]
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "Group": "",
      "Version": "v1",
      "Kind": "PersistentVolumeList"
    }
  ],
  "$schema": "http://json-schema.org/schema#",
  "type": "object"
}