{
  "$schema": "http://json-schema.org/schema#", 
  "required": [
    "dockerImageLayers"
  ], 
  "type": "object", 
  "description": "Image is an immutable representation of a Docker image and metadata at a point in time.", 
  "properties": {
    "dockerImageConfig": {
      "type": "string", 
      "description": "DockerImageConfig is a JSON blob that the runtime uses to set up the container. This is a part of manifest schema v2."
    }, 
    "dockerImageManifestMediaType": {
      "type": "string", 
      "description": "DockerImageManifestMediaType specifies the mediaType of manifest. This is a part of manifest schema v2."
    }, 
    "dockerImageMetadataVersion": {
      "type": "string", 
      "description": "DockerImageMetadataVersion conveys the version of the object, which if empty defaults to \"1.0\""
    }, 
    "signatures": {
      "items": {
        "$ref": "_definitions.json#/definitions/v1.ImageSignature"
      }, 
      "type": "array", 
      "description": "Signatures holds all signatures of the image."
    }, 
    "dockerImageLayers": {
      "items": {
        "$ref": "_definitions.json#/definitions/v1.ImageLayer"
      }, 
      "type": "array", 
      "description": "DockerImageLayers represents the layers in the image. May not be set if the image does not define that data."
    }, 
    "dockerImageManifest": {
      "type": "string", 
      "description": "DockerImageManifest is the raw JSON of the manifest"
    }, 
    "kind": {
      "type": "string", 
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
    }, 
    "apiVersion": {
      "type": "string", 
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
    }, 
    "metadata": {
      "description": "Standard object's metadata.", 
      "$ref": "_definitions.json#/definitions/v1.ObjectMeta"
    }, 
    "dockerImageReference": {
      "type": "string", 
      "description": "DockerImageReference is the string that can be used to pull this image."
    }, 
    "dockerImageSignatures": {
      "items": {
        "type": "string", 
        "format": "byte"
      }, 
      "type": "array", 
      "description": "DockerImageSignatures provides the signatures as opaque blobs. This is a part of manifest schema v1."
    }, 
    "dockerImageMetadata": {
      "description": "DockerImageMetadata contains metadata about this image", 
      "$ref": "_definitions.json#/definitions/runtime.RawExtension"
    }
  }
}