{
  "description": "Pod Security Policy governs the ability to make requests that affect the Security Context that will be applied to a pod and container.",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ]
    },
    "metadata": {
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": "object",
          "additionalProperties": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "clusterName": {
          "description": "The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.",
          "type": [
            "string",
            "null"
          ]
        },
        "creationTimestamp": {
          "type": [
            "string",
            "null"
          ],
          "format": "date-time"
        },
        "deletionGracePeriodSeconds": {
          "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
          "type": "integer",
          "format": "int64"
        },
        "deletionTimestamp": {
          "type": [
            "string",
            "null"
          ],
          "format": "date-time"
        },
        "finalizers": {
          "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "generateName": {
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#idempotency",
          "type": [
            "string",
            "null"
          ]
        },
        "generation": {
          "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
          "type": "integer",
          "format": "int64"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": "object",
          "additionalProperties": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": [
            "string",
            "null"
          ]
        },
        "namespace": {
          "description": "Namespace defines the space within each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
          "type": [
            "string",
            "null"
          ]
        },
        "ownerReferences": {
          "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "OwnerReference contains enough information to let you identify an owning object. Currently, an owning object must be in the same namespace, so there is no namespace field.",
            "required": [
              "apiVersion",
              "kind",
              "name",
              "uid"
            ],
            "properties": {
              "apiVersion": {
                "description": "API version of the referent.",
                "type": "string"
              },
              "blockOwnerDeletion": {
                "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
                "type": "boolean"
              },
              "controller": {
                "description": "If true, this reference points to the managing controller.",
                "type": "boolean"
              },
              "kind": {
                "description": "Kind of the referent. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
                "type": "string"
              },
              "name": {
                "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                "type": "string"
              },
              "uid": {
                "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "resourceVersion": {
          "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#concurrency-control-and-consistency",
          "type": [
            "string",
            "null"
          ]
        },
        "selfLink": {
          "description": "SelfLink is a URL representing this object. Populated by the system. Read-only.",
          "type": [
            "string",
            "null"
          ]
        },
        "uid": {
          "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    "spec": {
      "description": "Pod Security Policy Spec defines the policy enforced.",
      "required": [
        "seLinux",
        "runAsUser",
        "supplementalGroups",
        "fsGroup"
      ],
      "properties": {
        "allowedCapabilities": {
          "description": "AllowedCapabilities is a list of capabilities that can be requested to add to the container. Capabilities in this field may be added at the pod author's discretion. You must not list a capability in both AllowedCapabilities and RequiredDropCapabilities.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "defaultAddCapabilities": {
          "description": "DefaultAddCapabilities is the default set of capabilities that will be added to the container unless the pod spec specifically drops the capability.  You may not list a capabiility in both DefaultAddCapabilities and RequiredDropCapabilities.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "fsGroup": {
          "description": "FSGroupStrategyOptions defines the strategy type and options used to create the strategy.",
          "properties": {
            "ranges": {
              "description": "Ranges are the allowed ranges of fs groups.  If you would like to force a single fs group then supply a single range with the same start and end.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "ID Range provides a min/max of an allowed range of IDs.",
                "required": [
                  "min",
                  "max"
                ],
                "properties": {
                  "max": {
                    "description": "Max is the end of the range, inclusive.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "min": {
                    "description": "Min is the start of the range, inclusive.",
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "additionalProperties": false
              }
            },
            "rule": {
              "description": "Rule is the strategy that will dictate what FSGroup is used in the SecurityContext.",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        },
        "hostIPC": {
          "description": "hostIPC determines if the policy allows the use of HostIPC in the pod spec.",
          "type": "boolean"
        },
        "hostNetwork": {
          "description": "hostNetwork determines if the policy allows the use of HostNetwork in the pod spec.",
          "type": "boolean"
        },
        "hostPID": {
          "description": "hostPID determines if the policy allows the use of HostPID in the pod spec.",
          "type": "boolean"
        },
        "hostPorts": {
          "description": "hostPorts determines which host port ranges are allowed to be exposed.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "Host Port Range defines a range of host ports that will be enabled by a policy for pods to use.  It requires both the start and end to be defined.",
            "required": [
              "min",
              "max"
            ],
            "properties": {
              "max": {
                "description": "max is the end of the range, inclusive.",
                "type": "integer",
                "format": "int32"
              },
              "min": {
                "description": "min is the start of the range, inclusive.",
                "type": "integer",
                "format": "int32"
              }
            },
            "additionalProperties": false
          }
        },
        "privileged": {
          "description": "privileged determines if a pod can request to be run as privileged.",
          "type": "boolean"
        },
        "readOnlyRootFilesystem": {
          "description": "ReadOnlyRootFilesystem when set to true will force containers to run with a read only root file system.  If the container specifically requests to run with a non-read only root file system the PSP should deny the pod. If set to false the container may run with a read only root file system if it wishes but it will not be forced to.",
          "type": "boolean"
        },
        "requiredDropCapabilities": {
          "description": "RequiredDropCapabilities are the capabilities that will be dropped from the container.  These are required to be dropped and cannot be added.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "runAsUser": {
          "description": "Run A sUser Strategy Options defines the strategy type and any options used to create the strategy.",
          "required": [
            "rule"
          ],
          "properties": {
            "ranges": {
              "description": "Ranges are the allowed ranges of uids that may be used.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "ID Range provides a min/max of an allowed range of IDs.",
                "required": [
                  "min",
                  "max"
                ],
                "properties": {
                  "max": {
                    "description": "Max is the end of the range, inclusive.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "min": {
                    "description": "Min is the start of the range, inclusive.",
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "additionalProperties": false
              }
            },
            "rule": {
              "description": "Rule is the strategy that will dictate the allowable RunAsUser values that may be set.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "seLinux": {
          "description": "SELinux  Strategy Options defines the strategy type and any options used to create the strategy.",
          "required": [
            "rule"
          ],
          "properties": {
            "rule": {
              "description": "type is the strategy that will dictate the allowable labels that may be set.",
              "type": "string"
            },
            "seLinuxOptions": {
              "description": "SELinuxOptions are the labels to be applied to the container",
              "properties": {
                "level": {
                  "description": "Level is SELinux level label that applies to the container.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "role": {
                  "description": "Role is a SELinux role label that applies to the container.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "type": {
                  "description": "Type is a SELinux type label that applies to the container.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "user": {
                  "description": "User is a SELinux user label that applies to the container.",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "supplementalGroups": {
          "description": "SupplementalGroupsStrategyOptions defines the strategy type and options used to create the strategy.",
          "properties": {
            "ranges": {
              "description": "Ranges are the allowed ranges of supplemental groups.  If you would like to force a single supplemental group then supply a single range with the same start and end.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "ID Range provides a min/max of an allowed range of IDs.",
                "required": [
                  "min",
                  "max"
                ],
                "properties": {
                  "max": {
                    "description": "Max is the end of the range, inclusive.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "min": {
                    "description": "Min is the start of the range, inclusive.",
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "additionalProperties": false
              }
            },
            "rule": {
              "description": "Rule is the strategy that will dictate what supplemental groups is used in the SecurityContext.",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        },
        "volumes": {
          "description": "volumes is a white list of allowed volume plugins.  Empty indicates that all plugins may be used.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "additionalProperties": false
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "Group": "extensions",
      "Version": "v1beta1",
      "Kind": "PodSecurityPolicy"
    }
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#",
  "type": "object"
}