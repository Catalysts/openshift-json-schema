{
  "description": "NetNamespace describes a single isolated network. When using the redhat/openshift-ovs-multitenant plugin, every Namespace will have a corresponding NetNamespace object with the same name. (When using redhat/openshift-ovs-subnet, NetNamespaces are not used.)",
  "required": [
    "netname",
    "netid"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata.",
      "$ref": "https://raw.githubusercontent.com/garethr/openshift-json-schema/master/v3.6.0/_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "netid": {
      "description": "NetID is the network identifier of the network namespace assigned to each overlay network packet. This can be manipulated with the \"oadm pod-network\" commands.",
      "type": "integer",
      "format": "int64"
    },
    "netname": {
      "description": "NetName is the name of the network namespace. (This is the same as the object's name, but both fields must be set.)",
      "type": [
        "string",
        "null"
      ]
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "Group": "",
      "Version": "v1",
      "Kind": "NetNamespace"
    },
    {
      "Group": "network.openshift.io",
      "Version": "v1",
      "Kind": "NetNamespace"
    }
  ],
  "$schema": "http://json-schema.org/schema#",
  "type": "object"
}